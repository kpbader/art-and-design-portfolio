{"ast":null,"code":"var _jsxFileName = \"/Users/kpbader/Desktop/projects/art-and-design-portfolio/src/components/Nav/nav.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router\";\nimport { useState } from \"react\";\nimport './nav.css';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Button from 'react-bootstrap/Button'; // import { render } from \"@testing-library/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Nav() {\n  _s();\n\n  const location = useLocation(); // offCanvas \n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const onClick = () => setShow(true); // console.log(location.pathname);\n\n\n  const selectedTab = location.pathname; // function activeTab(path) {\n  //     if (selectedTab !== path) {\n  //         return;\n  //     } else {\n  //         return { color: \"silver\" }\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Nav, \"0Lv9T7knrWky2k48vhkAYdI90ig=\", false, function () {\n  return [useLocation];\n});\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["Link","useLocation","useState","Offcanvas","Button","Nav","location","show","setShow","handleClose","handleShow","onClick","selectedTab","pathname"],"sources":["/Users/kpbader/Desktop/projects/art-and-design-portfolio/src/components/Nav/nav.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router\";\nimport { useState } from \"react\";\nimport './nav.css';\nimport Offcanvas from 'react-bootstrap/Offcanvas'\nimport Button from 'react-bootstrap/Button';\n// import { render } from \"@testing-library/react\";\n\nfunction Nav() {\n\n    const location = useLocation()\n\n    // offCanvas \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const onClick = () => setShow(true);\n    // console.log(location.pathname);\n\n    const selectedTab = location.pathname;\n\n    // function activeTab(path) {\n    //     if (selectedTab !== path) {\n    //         return;\n    //     } else {\n    //         return { color: \"silver\" }\n    //     }\n    // }\n\n    return (\n        <>\n          <Button variant=\"primary\" onClick={handleShow}>\n            Launch\n          </Button>\n    \n          <Offcanvas show={show} onHide={handleClose}>\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              Some text as placeholder. In real life you can have the elements you\n              have chosen. Like, text, images, lists, etc.\n            </Offcanvas.Body>\n          </Offcanvas>\n        </>\n      );\n\n}\n\n\nexport default Nav;"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAMC,QAAQ,GAAGL,WAAW,EAA5B,CAFW,CAIX;;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;EACA,MAAMO,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;EACA,MAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;EACA,MAAMG,OAAO,GAAG,MAAMH,OAAO,CAAC,IAAD,CAA7B,CARW,CASX;;;EAEA,MAAMI,WAAW,GAAGN,QAAQ,CAACO,QAA7B,CAXW,CAaX;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,wBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,SAAhB;MAA0B,OAAO,EAAEH,UAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,SAAD;MAAW,IAAI,EAAEH,IAAjB;MAAuB,MAAM,EAAEE,WAA/B;MAAA,wBACE,QAAC,SAAD,CAAW,MAAX;QAAkB,WAAW,MAA7B;QAAA,uBACE,QAAC,SAAD,CAAW,KAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,SAAD,CAAW,IAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADJ;AAkBH;;GAvCQJ,G;UAEYJ,W;;;KAFZI,G;AA0CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}